# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Manufacturer {
  id: Int
  name: String!
  firstName: String!
  lastName: String!
  country: String
  city: String
  address: String
  logo: String
  phone: String
  email: String
  category: String
  products: [Product!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Identity {
  id: Int!
  primaryID: String!
  passwordHash: String!
  role: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Customer {
  id: Int!
  companyName: String
  firstName: String!
  lastName: String!
  email: String
  country: String!
  city: String!
  address: String!
  postal: String!
  photo: String
  status: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Order {
  id: Int!
  status: String!
  payment: String!
  price: Int
  deliveryPeriod: Interval
  actualDeliveryPeriod: Interval
  receiptDate: DateTime!
  country: String!
  city: String!
  address: String!
  customer: Customer!
  orderProducts: [OrderProduct!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type OrderProduct {
  order: Order!
  product: Product!
  productQuantity: Int!
}

type Product {
  id: Int!
  name: String!
  description: String
  category: String
  volume: Float!
  price: Int!
  manufacturer: Manufacturer!
  orderProducts: [OrderProduct!]
  warehouseProducts: [WarehouseProduct!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type WarehouseProduct {
  warehouse: Warehouse!
  product: Product!
  productQuantity: Int!
}

type Warehouse {
  id: Int
  capacity: Float
  country: String!
  city: String!
  address: String!
  firstName: String!
  lastName: String!
  phone: String!
  email: String
  warehouseProducts: [WarehouseProduct!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LoginResponse {
  accessToken: String!
  refreshToken: String
  identity: Identity
}

"""Interval custom scalar type"""
scalar Interval

type Query {
  warehouses(paginationInput: PaginationInput): [Warehouse!]!
  customerList(paginationInput: PaginationInput): [Customer!]!
  customer(id: Int!): Customer!
  refreshToken: LoginResponse!
  orders(paginationInput: PaginationInput): [Order!]!
  order(id: Int!): Order!
  products(paginationInput: PaginationInput, productFilter: ProductFilter): [Product!]!
  manufacturers(paginationInput: PaginationInput): [Manufacturer!]!
  manufacturer(id: Int!): Manufacturer!
}

input PaginationInput {
  limit: Int
  offset: Int
  order: String
}

input ProductFilter {
  onlyStored: Boolean
}

type Mutation {
  createWarehouse(createWarehouseInput: CreateWarehouseInput!): Warehouse!
  deleteWarehouse(id: Int!): Warehouse!
  createCustomer(createCustomerInput: CreateCustomerInput!): LoginResponse!
  updateCustomer(id: Int!, updateCustomerInput: UpdateCustomerInput!): Customer!
  removeCustomer(id: Int!): Customer
  userLogin(loginInput: LoginInput!): LoginResponse!
  adminLogin(loginInput: LoginInput!): LoginResponse!
  placeOrder(createOrderInput: CreateOrderInput!): Order!
  updateOrder(id: Int!, updateOrderInput: UpdateOrderInput!): Order!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(id: Int!, createProductInput: CreateProductInput!): Product!
  deleteProduct(id: Int!): Product!
  createManufacturer(createManufacturerInput: CreateManufacturerInput!): Manufacturer!
  updateManufacturer(id: String!, createManufacturerInput: CreateManufacturerInput!): Manufacturer!
  deleteManufacturer(id: Int!): Manufacturer!
}

input CreateWarehouseInput {
  capacity: Float
  country: String!
  city: String!
  address: String!
  firstName: String!
  lastName: String!
  phone: String!
  email: String
  products: [WarehouseProductInput!]
}

input WarehouseProductInput {
  productID: Int!
  productQuantity: Int!
}

input CreateCustomerInput {
  companyName: String
  firstName: String!
  lastName: String!
  email: String
  phone: String!
  country: String!
  city: String!
  address: String!
  postal: String!
  password: String!
  photo: String
}

input UpdateCustomerInput {
  companyName: String
  firstName: String
  lastName: String
  email: String
  phone: String
  country: String
  city: String
  address: String
  postal: String
  password: String
  photo: String
  status: String
}

input LoginInput {
  primaryID: String!
  password: String!
}

input CreateOrderInput {
  payment: String!
  receiptDate: DateTime!
  country: String!
  city: String!
  address: String!
  products: [OrderProductInput!]!
}

input OrderProductInput {
  productID: Int!
  productQuantity: Int!
}

input UpdateOrderInput {
  payment: String
  receiptDate: DateTime
  country: String
  city: String
  address: String
  products: [OrderProductInput!]
  price: Int
  status: String
}

input CreateProductInput {
  name: String!
  description: String
  category: String
  volume: Float!
  price: Int!
  manufacturerId: Int!
}

input CreateManufacturerInput {
  name: String!
  firstName: String!
  lastName: String!
  country: String
  city: String
  address: String
  logo: String
  phone: String
  email: String
  category: String
}